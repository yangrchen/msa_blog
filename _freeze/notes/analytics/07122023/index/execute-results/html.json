{
  "hash": "6e8ad2402c0591594f3b3fba113e3da2",
  "result": {
    "markdown": "---\ntitle: Complete Example\ndate: 07/12/2023\ndraft: true\n---\n\n\n# Exploratory Data Analysis\n\n-   Explore variables univariately\n-   Anything that looks unusual?\n-   Missing values?\n-   Data types\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AppliedPredictiveModeling)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ndata(FuelEconomy)\n\nsummary(cars2010)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    EngDispl         NumCyl        Transmission       FE       \n Min.   :1.000   Min.   : 2.000   S6     :213   Min.   :17.50  \n 1st Qu.:2.400   1st Qu.: 4.000   M6     :167   1st Qu.:29.09  \n Median :3.500   Median : 6.000   A4     :143   Median :34.51  \n Mean   :3.507   Mean   : 5.971   A6     :126   Mean   :34.71  \n 3rd Qu.:4.300   3rd Qu.: 8.000   A5     :114   3rd Qu.:39.20  \n Max.   :8.400   Max.   :16.000   M5     :101   Max.   :69.64  \n                                  (Other):243                  \n         AirAspirationMethod    NumGears      TransLockup     TransCreeperGear \n NaturallyAspirated:921      Min.   :1.000   Min.   :0.0000   Min.   :0.00000  \n Supercharged      : 18      1st Qu.:5.000   1st Qu.:0.0000   1st Qu.:0.00000  \n Turbocharged      :168      Median :6.000   Median :1.0000   Median :0.00000  \n                             Mean   :5.268   Mean   :0.6802   Mean   :0.04878  \n                             3rd Qu.:6.000   3rd Qu.:1.0000   3rd Qu.:0.00000  \n                             Max.   :8.000   Max.   :1.0000   Max.   :1.00000  \n                                                                               \n                  DriveDesc   IntakeValvePerCyl ExhaustValvesPerCyl\n AllWheelDrive         :205   Min.   :0.000     Min.   :0.000      \n FourWheelDrive        :159   1st Qu.:2.000     1st Qu.:2.000      \n ParttimeFourWheelDrive: 11   Median :2.000     Median :2.000      \n TwoWheelDriveFront    :382   Mean   :1.862     Mean   :1.837      \n TwoWheelDriveRear     :350   3rd Qu.:2.000     3rd Qu.:2.000      \n                              Max.   :3.000     Max.   :2.000      \n                                                                   \n                    CarlineClassDesc VarValveTiming    VarValveLift   \n SpecialPurposeVehicleSUV4WD:170     Min.   :0.0000   Min.   :0.0000  \n CompactCars                :145     1st Qu.:1.0000   1st Qu.:0.0000  \n MidsizeCars                :135     Median :1.0000   Median :0.0000  \n SpecialPurposeVehicleSUV2WD:133     Mean   :0.8229   Mean   :0.1671  \n SubcompactCars             :116     3rd Qu.:1.0000   3rd Qu.:0.0000  \n LargeCars                  : 75     Max.   :1.0000   Max.   :1.0000  \n (Other)                    :333                                      \n```\n:::\n:::\n\n\n# Multicollinearity\n\nSee if multicollinearity is an issue. If so, how do you \nwant to deal with it?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(cars2010[, c(1, 2, 4, 6, 7, 8, 10, 11, 13, 14)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       EngDispl       NumCyl          FE     NumGears\nEngDispl             1.00000000  0.906260027 -0.78739383  0.211730489\nNumCyl               0.90626003  1.000000000 -0.74021798  0.288711440\nFE                  -0.78739383 -0.740217981  1.00000000 -0.211284876\nNumGears             0.21173049  0.288711440 -0.21128488  1.000000000\nTransLockup          0.22839513  0.208771908 -0.27193887  0.001353611\nTransCreeperGear     0.02666562  0.025520828 -0.06962168  0.043595219\nIntakeValvePerCyl   -0.42235745 -0.248509452  0.28034403  0.177960634\nExhaustValvesPerCyl -0.47843804 -0.339851831  0.33565285  0.152819250\nVarValveTiming      -0.06825603  0.005399291  0.12495278  0.090839722\nVarValveLift        -0.08657142 -0.059461008  0.09621127  0.130719422\n                     TransLockup TransCreeperGear IntakeValvePerCyl\nEngDispl             0.228395128       0.02666562       -0.42235745\nNumCyl               0.208771908       0.02552083       -0.24850945\nFE                  -0.271938867      -0.06962168        0.28034403\nNumGears             0.001353611       0.04359522        0.17796063\nTransLockup          1.000000000       0.09232848       -0.13132599\nTransCreeperGear     0.092328478       1.00000000       -0.07767916\nIntakeValvePerCyl   -0.131325993      -0.07767916        1.00000000\nExhaustValvesPerCyl -0.158326003      -0.17071584        0.91148782\nVarValveTiming      -0.094772029      -0.23553440        0.24082398\nVarValveLift        -0.097809395      -0.10143857        0.15485588\n                    ExhaustValvesPerCyl VarValveTiming VarValveLift\nEngDispl                     -0.4784380   -0.068256030  -0.08657142\nNumCyl                       -0.3398518    0.005399291  -0.05946101\nFE                            0.3356529    0.124952779   0.09621127\nNumGears                      0.1528193    0.090839722   0.13071942\nTransLockup                  -0.1583260   -0.094772029  -0.09780940\nTransCreeperGear             -0.1707158   -0.235534402  -0.10143857\nIntakeValvePerCyl             0.9114878    0.240823978   0.15485588\nExhaustValvesPerCyl           1.0000000    0.279339052   0.17538900\nVarValveTiming                0.2793391    1.000000000   0.05553603\nVarValveLift                  0.1753890    0.055536033   1.00000000\n```\n:::\n:::\n\n\n- Going to remove `NumCyl` and `IntakeValvePerCyl` due\nto high multicollinearity and other variables are more\ncorrelated\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: carData\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'car'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    recode\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    some\n```\n:::\n\n```{.r .cell-code}\ncars2010.1 <- cars2010[, -c(2, 10)]\ncollin.test <- lm(FE ~ ., data = cars2010.1)\nvif(collin.test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                          GVIF Df GVIF^(1/(2*Df))\nEngDispl              2.492719  1        1.578835\nTransmission        327.630688 15        1.212959\nAirAspirationMethod   1.442853  2        1.095987\nNumGears             26.097874  1        5.108608\nTransLockup           3.015590  1        1.736545\nTransCreeperGear      1.210922  1        1.100419\nDriveDesc             9.381876  4        1.322928\nExhaustValvesPerCyl   2.085180  1        1.444015\nCarlineClassDesc     22.735388 16        1.102547\nVarValveTiming        1.339877  1        1.157531\nVarValveLift          1.416643  1        1.190228\n```\n:::\n:::\n\n\n-   Will also get rid of `Transmission`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars2010.1 %>%\n    select(1) %>%\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     EngDispl\n1088      4.7\n1089      4.7\n1090      4.2\n1091      4.2\n1092      5.2\n1093      5.2\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}