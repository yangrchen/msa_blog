{
  "hash": "7956287c2fa496d1a39f6db6b95603d4",
  "result": {
    "markdown": "---\ntitle: Breakout 5\ndate: 07/03/2023\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nbike = pd.read_csv('https://raw.githubusercontent.com/IAA-Faculty/statistical_foundations/master/bike.csv')\nbike.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>dteday</th>\n      <th>season</th>\n      <th>yr</th>\n      <th>mnth</th>\n      <th>hr</th>\n      <th>holiday</th>\n      <th>weekday</th>\n      <th>workingday</th>\n      <th>weathersit</th>\n      <th>temp</th>\n      <th>atemp</th>\n      <th>hum</th>\n      <th>windspeed</th>\n      <th>casual</th>\n      <th>registered</th>\n      <th>cnt</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>14975</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.24</td>\n      <td>0.2879</td>\n      <td>0.81</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>13</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>14975</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.22</td>\n      <td>0.2727</td>\n      <td>0.80</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>32</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>14975</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.22</td>\n      <td>0.2727</td>\n      <td>0.80</td>\n      <td>0.0</td>\n      <td>5</td>\n      <td>27</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>14975</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.24</td>\n      <td>0.2879</td>\n      <td>0.75</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>10</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14975</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.24</td>\n      <td>0.2879</td>\n      <td>0.75</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# 1\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nbike_lm = smf.ols('cnt ~ C(workingday) * C(season)', bike).fit()\n\nsm.stats.anova_lm(bike_lm)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df</th>\n      <th>sum_sq</th>\n      <th>mean_sq</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(workingday)</th>\n      <td>1.0</td>\n      <td>5.243871e+05</td>\n      <td>5.243871e+05</td>\n      <td>17.082764</td>\n      <td>3.595344e-05</td>\n    </tr>\n    <tr>\n      <th>C(season)</th>\n      <td>3.0</td>\n      <td>3.748219e+07</td>\n      <td>1.249406e+07</td>\n      <td>407.014449</td>\n      <td>1.544102e-255</td>\n    </tr>\n    <tr>\n      <th>C(workingday):C(season)</th>\n      <td>3.0</td>\n      <td>5.199753e+05</td>\n      <td>1.733251e+05</td>\n      <td>5.646347</td>\n      <td>7.301192e-04</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>17371.0</td>\n      <td>5.332350e+08</td>\n      <td>3.069685e+04</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   The interaction between `workingday` and `season` seems to be significant towards predicting `cnt`\n\n# 2\n\nTalk with breakout group.\n\n# 3\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ncasual_lm = smf.ols('casual ~ C(workingday) * C(season)', bike).fit()\n\nsm.stats.anova_lm(casual_lm)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df</th>\n      <th>sum_sq</th>\n      <th>mean_sq</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(workingday)</th>\n      <td>1.0</td>\n      <td>3.826038e+06</td>\n      <td>3.826038e+06</td>\n      <td>1954.028610</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>C(season)</th>\n      <td>3.0</td>\n      <td>3.750852e+06</td>\n      <td>1.250284e+06</td>\n      <td>638.543326</td>\n      <td>0.000000e+00</td>\n    </tr>\n    <tr>\n      <th>C(workingday):C(season)</th>\n      <td>3.0</td>\n      <td>6.559238e+05</td>\n      <td>2.186413e+05</td>\n      <td>111.664154</td>\n      <td>1.292550e-71</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>17371.0</td>\n      <td>3.401286e+07</td>\n      <td>1.958026e+03</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   Not a significant interaction between `workingday` and `season` for casual bikers\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nregistered_lm = smf.ols('registered ~ C(workingday) * C(season)', bike).fit()\n\nsm.stats.anova_lm(registered_lm)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df</th>\n      <th>sum_sq</th>\n      <th>mean_sq</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(workingday)</th>\n      <td>1.0</td>\n      <td>7.183321e+06</td>\n      <td>7.183321e+06</td>\n      <td>335.449602</td>\n      <td>3.121975e-74</td>\n    </tr>\n    <tr>\n      <th>C(season)</th>\n      <td>3.0</td>\n      <td>1.885079e+07</td>\n      <td>6.283597e+06</td>\n      <td>293.433926</td>\n      <td>7.848911e-186</td>\n    </tr>\n    <tr>\n      <th>C(workingday):C(season)</th>\n      <td>3.0</td>\n      <td>9.621956e+04</td>\n      <td>3.207319e+04</td>\n      <td>1.497767</td>\n      <td>2.129291e-01</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>17371.0</td>\n      <td>3.719828e+08</td>\n      <td>2.141401e+04</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   Significant interaction between `workingday` and `season` for registered bikers\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nunique_season = bike['season'].unique()\n\nfor season in unique_season:\n    sliced_data = smf.ols(\"casual ~ C(workingday)\", bike[bike[\"season\"] == season]).fit()\n    print(sm.stats.anova_lm(sliced_data))\n\nfor season in unique_season:\n    sliced_data = smf.ols(\"registered ~ C(workingday)\", bike[bike[\"season\"] == season]).fit()\n    print(sm.stats.anova_lm(sliced_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   df        sum_sq        mean_sq          F        PR(>F)\nC(workingday)     1.0  1.436979e+05  143697.866870  199.44088  2.751109e-44\nResidual       4240.0  3.054935e+06     720.503576        NaN           NaN\n                   df        sum_sq       mean_sq           F         PR(>F)\nC(workingday)     1.0  2.044757e+06  2.044757e+06  720.507711  3.944648e-147\nResidual       4407.0  1.250680e+07  2.837939e+03         NaN            NaN\n                   df        sum_sq       mean_sq           F         PR(>F)\nC(workingday)     1.0  1.623762e+06  1.623762e+06  700.640615  1.328288e-143\nResidual       4494.0  1.041502e+07  2.317539e+03         NaN            NaN\n                   df        sum_sq        mean_sq           F         PR(>F)\nC(workingday)     1.0  9.299500e+05  929949.990208  489.501677  9.987658e-103\nResidual       4230.0  8.036108e+06    1899.789180         NaN            NaN\n                   df        sum_sq       mean_sq           F        PR(>F)\nC(workingday)     1.0  1.278398e+06  1.278398e+06  120.723426  1.035371e-27\nResidual       4240.0  4.489940e+07  1.058948e+04         NaN           NaN\n                   df        sum_sq       mean_sq          F        PR(>F)\nC(workingday)     1.0  1.351663e+06  1.351663e+06  58.687294  2.258053e-14\nResidual       4407.0  1.015003e+08  2.303161e+04        NaN           NaN\n                   df        sum_sq       mean_sq          F        PR(>F)\nC(workingday)     1.0  2.328766e+06  2.328766e+06  85.657432  3.232019e-20\nResidual       4494.0  1.221782e+08  2.718697e+04        NaN           NaN\n                   df        sum_sq       mean_sq          F        PR(>F)\nC(workingday)     1.0  1.629497e+06  1.629497e+06  66.658104  4.220264e-16\nResidual       4230.0  1.034048e+08  2.444559e+04        NaN           NaN\n```\n:::\n:::\n\n\n-   For each individual season, there is a significant difference between working days and non-working days in registered bikers\n\n",
    "supporting": [
      "breakout_5_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}