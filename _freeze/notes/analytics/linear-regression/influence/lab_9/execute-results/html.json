{
  "hash": "053fbe9fc3dd99d7103de9748b79889f",
  "result": {
    "markdown": "---\ntitle: Lab 9\ndate: 07/11/2023\n---\n\n\n# 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AppliedPredictiveModeling)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(lmtest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n```{.r .cell-code}\ndata(FuelEconomy)\n\ncars2010 <- cars2010 %>%\n    mutate(idx = row_number())\nglimpse(cars2010)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,107\nColumns: 15\n$ EngDispl            <dbl> 4.7, 4.7, 4.2, 4.2, 5.2, 5.2, 2.0, 6.0, 3.0, 3.0, …\n$ NumCyl              <int> 8, 8, 8, 8, 10, 10, 4, 12, 6, 6, 6, 6, 16, 8, 8, 8…\n$ Transmission        <fct> AM6, M6, M6, AM6, AM6, M6, S6, S6, S6, M6, S7, M6,…\n$ FE                  <dbl> 28.0198, 25.6094, 26.8000, 25.0451, 24.8000, 23.90…\n$ AirAspirationMethod <fct> NaturallyAspirated, NaturallyAspirated, NaturallyA…\n$ NumGears            <int> 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 7, 6, 6, 6, 6,…\n$ TransLockup         <dbl> 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0,…\n$ TransCreeperGear    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ DriveDesc           <fct> TwoWheelDriveRear, TwoWheelDriveRear, AllWheelDriv…\n$ IntakeValvePerCyl   <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,…\n$ ExhaustValvesPerCyl <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,…\n$ CarlineClassDesc    <fct> 2Seaters, 2Seaters, 2Seaters, 2Seaters, 2Seaters, …\n$ VarValveTiming      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,…\n$ VarValveLift        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,…\n$ idx                 <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n```\n:::\n\n```{.r .cell-code}\ncars2010.model <- lm(FE ~ EngDispl + Transmission + AirAspirationMethod + TransLockup + TransCreeperGear + DriveDesc + IntakeValvePerCyl + CarlineClassDesc + VarValveLift, data = cars2010)\n```\n:::\n\n\n## a\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars2010.time <- lm(FE ~ idx, data = cars2010)\n\ndwtest(cars2010.time, alternative = \"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDurbin-Watson test\n\ndata:  cars2010.time\nDW = 0.71797, p-value < 2.2e-16\nalternative hypothesis: true autocorrelation is greater than 0\n```\n:::\n:::\n\n\n## b\n\nStudentized residuals:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cars2010.model, aes(x = cars2010$idx, y = rstudent(cars2010.model))) +\n    geom_point() +\n    geom_line(y = -3) +\n    geom_line(y = 3) +\n    labs(title = \"External Studentized Residuals\", x = \"Observation\", y = \"Residuals\")\n```\n\n::: {.cell-output-display}\n![](lab_9_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndf.cut <- 2 * (sqrt((length(cars2010.model$coefficients)) / nrow(cars2010)))\n\nggplot(cars2010.model, aes(x = cars2010$idx, y = dffits(cars2010.model))) +\n    geom_point(color = \"orange\") +\n    geom_line(y = df.cut) +\n    geom_line(y = -df.cut) +\n    labs(title = \"DFFITS\", x = \"Observation\", y = \"DFFITS\")\n```\n\n::: {.cell-output-display}\n![](lab_9_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\nrstud <- abs(rstudent(cars2010.model))\ndf.test <- abs(dffits(cars2010.model))\n\nlength(union(\n    names(rstud[rstud > 3]),\n    names(df.test[df.test > 1])\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21\n```\n:::\n\n```{.r .cell-code}\nlength(rstud[rstud > 3])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(cooks.distance(cars2010.model))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.06202869\n```\n:::\n:::",
    "supporting": [
      "lab_9_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}