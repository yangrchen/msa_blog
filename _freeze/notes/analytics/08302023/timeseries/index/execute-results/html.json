{
  "hash": "9beefe3f3d24ae30d40e3b22253ef63a",
  "result": {
    "markdown": "---\ntitle: Exponential Smoothing Models\ndate: 08/30/2023\n---\n\nTime series data assumes that observations at a certain time point depend on previous observations in time.\n\n| Model   | Formula                                     |\n|---------|---------------------------------------------|\n| Naive   | $$                                          \n           \\hat{Y}_{t+h} = Y_t                          \n           $$                                           |\n| Average | $$                                          \n           \\hat{Y}_{t+h} = \\frac{1}{T}\\sum_{t=1}^T Y_t  \n           $$                                           |\n\n# Exponential Smoothing\n\nExponential smoothing takes an average of our data, but uses a *weighted* average instead. Models only require a few parameters.\n\nWe cover common types of exponential smoothing:\n\n-   Single\n-   Linear / Holt (trend)\n-   Holt-Winters (trend and seasonality)\n\n# Single Exponential Smoothing\n\nSingle exponential equates the predictions at time $t$ equal to the weighted values of the previous time period along with the previous time period's prediction.\n\n$$\n\\hat{Y}_{t+1} = \\theta Y_t + (1 - \\theta)\\hat{Y}_t\n$$\n\n-   $\\hat{Y}_t$ is the estimate of $Y_t$ (weighted average of prev. observations)\n-   $0 \\leq \\theta \\leq 1$\n\n$$\n\\hat{Y}_{t+1} = \\theta Y_t + \\theta(1 - \\theta)Y_{t - 1} + \\theta(1 - \\theta)^2Y_{t - 2} + \\cdots\n$$\n\nWeights decrease exponentially as we go further back in time so more weight is put on recent observations.\n\n![Single Exponential Smoothing Weights](images/single-exponential-smoothing-weights.png)\n\n## Component Form\n\nSingle ESM can be written in component form:\n\n$$\n\\hat{Y}_{t+1} = L_t\n$$\n\n$$\nL_t = \\theta Y_t + (1 - \\theta)L_{t - 1}\n$$\n\n## Parameter Estimation\n\nTypical method for calculating optimal value of $\\theta$ in ESM is one-step ahead forecasts.\n\nValue of $\\theta$ that minimizes the one-step ahead forecast errors is considered the optimal value:\n\n$$\n\\text{SSE} = \\sum_{t=1}^T (Y_t - \\hat{Y}_t)^2\n$$\n\nEstimates that are not statistically significant should not be disqualified. Estimates are fine even without normality however normality is needed is trying to construct a confidence interval.\n\n::: {.panel-tabset}\n# Python\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.api import ExponentialSmoothing, SimpleExpSmoothing\n\nsteel = pd.read_csv(\n    \"https://raw.githubusercontent.com/sjsimmo2/TimeSeries/master/steel.csv\"\n)\ndf = pd.date_range(\"1/1/1984\", \"12/1/1991\", freq=\"MS\")\nsteel.set_index(pd.to_datetime(df), inplace=True)\n\nfit = SimpleExpSmoothing(steel[\"steelshp\"]).fit()\nfit.params[\"smoothing_level\"]\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n0.45493602336086547\n```\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}