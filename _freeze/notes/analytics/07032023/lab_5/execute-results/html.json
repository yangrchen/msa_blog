{
  "hash": "44f85f1eeab57da59618d129fb4d7249",
  "result": {
    "markdown": "---\ntitle: Lab 5\ndate: 07/03/2023\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndrugdose = pd.read_csv('https://raw.githubusercontent.com/IAA-Faculty/statistical_foundations/master/drug.csv')\n\ndrugdose.T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>160</th>\n      <th>161</th>\n      <th>162</th>\n      <th>163</th>\n      <th>164</th>\n      <th>165</th>\n      <th>166</th>\n      <th>167</th>\n      <th>168</th>\n      <th>169</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>PatientID</th>\n      <td>69</td>\n      <td>162</td>\n      <td>181</td>\n      <td>209</td>\n      <td>308</td>\n      <td>331</td>\n      <td>340</td>\n      <td>350</td>\n      <td>360</td>\n      <td>363</td>\n      <td>...</td>\n      <td>9679</td>\n      <td>9682</td>\n      <td>9693</td>\n      <td>9714</td>\n      <td>9735</td>\n      <td>9865</td>\n      <td>9878</td>\n      <td>9941</td>\n      <td>9947</td>\n      <td>9990</td>\n    </tr>\n    <tr>\n      <th>DrugDose</th>\n      <td>2</td>\n      <td>4</td>\n      <td>1</td>\n      <td>4</td>\n      <td>2</td>\n      <td>4</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>...</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Disease</th>\n      <td>B</td>\n      <td>A</td>\n      <td>B</td>\n      <td>A</td>\n      <td>A</td>\n      <td>C</td>\n      <td>C</td>\n      <td>B</td>\n      <td>B</td>\n      <td>A</td>\n      <td>...</td>\n      <td>B</td>\n      <td>B</td>\n      <td>A</td>\n      <td>C</td>\n      <td>C</td>\n      <td>B</td>\n      <td>C</td>\n      <td>B</td>\n      <td>A</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>BloodP</th>\n      <td>13</td>\n      <td>-47</td>\n      <td>12</td>\n      <td>-4</td>\n      <td>4</td>\n      <td>37</td>\n      <td>-19</td>\n      <td>-9</td>\n      <td>-17</td>\n      <td>-41</td>\n      <td>...</td>\n      <td>15</td>\n      <td>21</td>\n      <td>6</td>\n      <td>-32</td>\n      <td>-7</td>\n      <td>-24</td>\n      <td>19</td>\n      <td>23</td>\n      <td>5</td>\n      <td>-24</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows × 170 columns</p>\n</div>\n```\n:::\n:::\n\n\n# 1\n\n## a\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nax = sns.catplot(\n    drugdose, kind=\"bar\",\n    x=\"DrugDose\", y=\"BloodP\", hue=\"Disease\",\n    errorbar=None, palette=\"dark\", alpha=.6, height=6\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/opt/homebrew/Caskroom/miniconda/base/envs/msa/lib/python3.11/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight\n  self._figure.tight_layout(*args, **kwargs)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lab_5_files/figure-html/cell-3-output-2.png){width=628 height=564}\n:::\n:::\n\n\n-   There seems to be a significant difference in blood pressure for the 100mg drug dose with disease B as well as the 200mg drug dose with disease B\n\n## b\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndrug_lm = smf.ols('BloodP ~ C(DrugDose) * C(Disease)', drugdose).fit()\n\nsm.stats.anova_lm(drug_lm, typ=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(DrugDose)</th>\n      <td>202.577573</td>\n      <td>3.0</td>\n      <td>0.156057</td>\n      <td>9.256570e-01</td>\n    </tr>\n    <tr>\n      <th>C(Disease)</th>\n      <td>19276.486901</td>\n      <td>2.0</td>\n      <td>22.274702</td>\n      <td>3.005823e-09</td>\n    </tr>\n    <tr>\n      <th>C(DrugDose):C(Disease)</th>\n      <td>17146.316981</td>\n      <td>6.0</td>\n      <td>6.604404</td>\n      <td>3.021199e-06</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>68366.458868</td>\n      <td>158.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   Interaction between `DrugDose` and `Disease` seems to be significant in explaining `BloodP`\n\n## c\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nunique_disease = np.sort(drugdose['Disease'].unique())\n\nfor disease in unique_disease:\n    sliced_data = smf.ols('BloodP ~ C(DrugDose)', drugdose[drugdose['Disease'] == disease]).fit()\n    print(f'\\nDisease: {disease}')\n    print(sm.stats.anova_lm(sliced_data)['PR(>F)'])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nDisease: A\nC(DrugDose)    0.001123\nResidual            NaN\nName: PR(>F), dtype: float64\n\nDisease: B\nC(DrugDose)    0.00027\nResidual           NaN\nName: PR(>F), dtype: float64\n\nDisease: C\nC(DrugDose)    0.81447\nResidual           NaN\nName: PR(>F), dtype: float64\n```\n:::\n:::\n\n\n-   For diseases A and B there seems to be significant differences in drug dose on blood pressure. Disease C does not seem to have a significant difference in drug dose on blood pressure.\n\n# 2\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndisks = pd.read_csv('https://raw.githubusercontent.com/IAA-Faculty/statistical_foundations/master/disks.csv')\n\ndisks.T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>86</th>\n      <th>87</th>\n      <th>88</th>\n      <th>89</th>\n      <th>90</th>\n      <th>91</th>\n      <th>92</th>\n      <th>93</th>\n      <th>94</th>\n      <th>95</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Technician</th>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>Angela</td>\n      <td>...</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n      <td>Karen</td>\n    </tr>\n    <tr>\n      <th>Brand</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Time</th>\n      <td>31</td>\n      <td>53</td>\n      <td>41</td>\n      <td>29</td>\n      <td>26</td>\n      <td>33</td>\n      <td>47</td>\n      <td>40</td>\n      <td>20</td>\n      <td>54</td>\n      <td>...</td>\n      <td>35</td>\n      <td>64</td>\n      <td>102</td>\n      <td>90</td>\n      <td>84</td>\n      <td>76</td>\n      <td>84</td>\n      <td>90</td>\n      <td>94</td>\n      <td>60</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 96 columns</p>\n</div>\n```\n:::\n:::\n\n\n## a\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndisks_lm = smf.ols('Time ~ C(Technician) * C(Brand)', disks).fit()\n\nprint(disks_lm.summary())\nsm.stats.anova_lm(disks_lm, typ=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                   Time   R-squared:                       0.619\nModel:                            OLS   Adj. R-squared:                  0.569\nMethod:                 Least Squares   F-statistic:                     12.38\nDate:                Tue, 05 Sep 2023   Prob (F-statistic):           1.66e-13\nTime:                        14:15:22   Log-Likelihood:                -376.10\nNo. Observations:                  96   AIC:                             776.2\nDf Residuals:                      84   BIC:                             807.0\nDf Model:                          11                                         \nCovariance Type:            nonrobust                                         \n=========================================================================================================\n                                            coef    std err          t      P>|t|      [0.025      0.975]\n---------------------------------------------------------------------------------------------------------\nIntercept                                37.5000      4.599      8.154      0.000      28.354      46.646\nC(Technician)[T.Bob]                     19.3750      6.504      2.979      0.004       6.441      32.309\nC(Technician)[T.Justin]                   5.0000      6.504      0.769      0.444      -7.934      17.934\nC(Technician)[T.Karen]                   35.5000      6.504      5.458      0.000      22.566      48.434\nC(Brand)[T.2]                            -6.2500      6.504     -0.961      0.339     -19.184       6.684\nC(Brand)[T.3]                            12.1250      6.504      1.864      0.066      -0.809      25.059\nC(Technician)[T.Bob]:C(Brand)[T.2]       21.5000      9.198      2.337      0.022       3.209      39.791\nC(Technician)[T.Justin]:C(Brand)[T.2]     8.7500      9.198      0.951      0.344      -9.541      27.041\nC(Technician)[T.Karen]:C(Brand)[T.2]    -11.0000      9.198     -1.196      0.235     -29.291       7.291\nC(Technician)[T.Bob]:C(Brand)[T.3]      -25.8750      9.198     -2.813      0.006     -44.166      -7.584\nC(Technician)[T.Justin]:C(Brand)[T.3]   -10.1250      9.198     -1.101      0.274     -28.416       8.166\nC(Technician)[T.Karen]:C(Brand)[T.3]     -0.1250      9.198     -0.014      0.989     -18.416      18.166\n==============================================================================\nOmnibus:                        2.790   Durbin-Watson:                   2.199\nProb(Omnibus):                  0.248   Jarque-Bera (JB):                2.505\nSkew:                           0.396   Prob(JB):                        0.286\nKurtosis:                       2.997   Cond. No.                         17.9\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(Technician)</th>\n      <td>14797.875000</td>\n      <td>3.0</td>\n      <td>29.151194</td>\n      <td>5.153348e-13</td>\n    </tr>\n    <tr>\n      <th>C(Brand)</th>\n      <td>343.145833</td>\n      <td>2.0</td>\n      <td>1.013974</td>\n      <td>3.671708e-01</td>\n    </tr>\n    <tr>\n      <th>C(Technician):C(Brand)</th>\n      <td>7907.437500</td>\n      <td>6.0</td>\n      <td>7.788660</td>\n      <td>1.122763e-06</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>14213.500000</td>\n      <td>84.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   At a significant level of $\\alpha = 0.05$, the overall F-test is significant in our model\n-   Similarly, the interaction is also significant\n\n## b\n\nSince our interaction is significant, we no longer care about the significance of our main effects. With model hierarchy, we keep the main effects in our model as well\n\n## c\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport statsmodels.stats.multicomp as mc\n\nunique_brands = np.sort(disks['Brand'].unique())\n\nfor b in unique_brands:\n    sliced_data = disks[disks['Brand'] == b]\n    sliced_ols = smf.ols('Time ~ C(Technician)', sliced_data).fit()\n    print(f'\\nBrand: {b}')\n    print(mc.MultiComparison(sliced_data['Time'], sliced_data['Technician']).tukeyhsd(alpha=0.01))\n    print(sm.stats.anova_lm(sliced_ols))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nBrand: 1\n Multiple Comparison of Means - Tukey HSD, FWER=0.01 \n=====================================================\ngroup1 group2 meandiff p-adj   lower    upper  reject\n-----------------------------------------------------\nAngela    Bob   19.375 0.0118  -0.3933 39.1433  False\nAngela Justin      5.0 0.8233 -14.7683 24.7683  False\nAngela  Karen     35.5    0.0  15.7317 55.2683   True\n   Bob Justin  -14.375 0.0847 -34.1433  5.3933  False\n   Bob  Karen   16.125 0.0442  -3.6433 35.8933  False\nJustin  Karen     30.5 0.0001  10.7317 50.2683   True\n-----------------------------------------------------\n                 df      sum_sq      mean_sq          F    PR(>F)\nC(Technician)   3.0  6115.09375  2038.364583  15.208129  0.000005\nResidual       28.0  3752.87500   134.031250        NaN       NaN\n\nBrand: 2\n Multiple Comparison of Means - Tukey HSD, FWER=0.01 \n=====================================================\ngroup1 group2 meandiff p-adj   lower    upper  reject\n-----------------------------------------------------\nAngela    Bob   40.875    0.0  15.6475 66.1025   True\nAngela Justin    13.75 0.2673 -11.4775 38.9775  False\nAngela  Karen     24.5 0.0127  -0.7275 49.7275  False\n   Bob Justin  -27.125 0.0052 -52.3525 -1.8975   True\n   Bob  Karen  -16.375 0.1434 -41.6025  8.8525  False\nJustin  Karen    10.75  0.477 -14.4775 35.9775  False\n-----------------------------------------------------\n                 df      sum_sq      mean_sq          F    PR(>F)\nC(Technician)   3.0  7159.09375  2386.364583  10.932522  0.000063\nResidual       28.0  6111.87500   218.281250        NaN       NaN\n\nBrand: 3\n Multiple Comparison of Means - Tukey HSD, FWER=0.01 \n=====================================================\ngroup1 group2 meandiff p-adj   lower    upper  reject\n-----------------------------------------------------\nAngela    Bob     -6.5 0.7259 -27.7799 14.7799  False\nAngela Justin   -5.125 0.8433 -26.4049 16.1549  False\nAngela  Karen   35.375    0.0  14.0951 56.6549   True\n   Bob Justin    1.375 0.9961 -19.9049 22.6549  False\n   Bob  Karen   41.875    0.0  20.5951 63.1549   True\nJustin  Karen     40.5    0.0  19.2201 61.7799   True\n-----------------------------------------------------\n                 df    sum_sq      mean_sq         F        PR(>F)\nC(Technician)   3.0  9431.125  3143.708333  20.24118  3.537879e-07\nResidual       28.0  4348.750   155.312500       NaN           NaN\n```\n:::\n:::\n\n\n-   There are differences between different technicians for each brand of disk drive\n\n",
    "supporting": [
      "lab_5_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}